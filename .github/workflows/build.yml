name: Build

on:
    push:
        branches-ignore:
            - 'dependabot/**'
        paths-ignore:
            - "docs/**"
            - "*.md"
    pull_request:
        paths-ignore:
            - "docs/**"
            - "*.md"
    release:
        types: [created]
    schedule:
        - cron: "0 1 * * 6" # Run at 1am every Saturday
    workflow_dispatch: ~

jobs:
    static-checks:
        runs-on: ubuntu-latest

        name: "Static checks (PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }})"

        timeout-minutes: 10

        strategy:
            fail-fast: false
            matrix:
                php: [ 8.0 ]
                symfony: [ ^5.4, ^6.0 ]

        steps:
            -
                uses: actions/checkout@v3

            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    ini-values: date.timezone=Europe/Paris, opcache.enable=1, opcache.enable_cli=0, opcache.memory_consumption=512, opcache.max_accelerated_files=65407, opcache.interned_strings_buffer=8, opcache.validate_timestamps=0, opcache.save_comments=1, opcache.fast_shutdown=0
                    extensions: intl, gd, opcache, mysql, pdo_mysql
                    tools: flex,symfony
                    coverage: none

            -
                name: Configure global composer
                if: matrix.symfony != ''
                run: |
                    composer global config --no-plugins allow-plugins.symfony/flex true
                    composer global require --no-progress --no-scripts --no-plugins "symfony/flex"
            -
                name: Get Composer cache directory
                run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
                id: composer-cache

            -
                name: Cache Composer
                uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-php-${{ matrix.php }}-symfony-${{ matrix.symfony }}-composer-${{ hashFiles('**/composer.json') }}
                    restore-keys: |
                        ${{ runner.os }}-php-${{ matrix.php }}-symfony-${{ matrix.symfony }}-composer-
            -
                name: Install PHP dependencies
                run: composer update --no-interaction --no-scripts
                env:
                    SYMFONY_REQUIRE: ${{ matrix.symfony }}
                id: end-of-setup

            -
                name: Validate composer.json
                run: composer validate --strict --no-check-version
                if: always() && steps.end-of-setup.outcome == 'success'

            -
                name: Check for security vulnerabilities
                run: symfony security:check
                if: always() && steps.end-of-setup.outcome == 'success'

            -
                name: Validate Yaml files
                run: vendor/bin/yaml-lint src
                if: always() && steps.end-of-setup.outcome == 'success'

            -
                name: Run ECS
                run: vendor/bin/ecs check src
                if: always() && steps.end-of-setup.outcome == 'success'

            -
                name: Run Psalm
                run: vendor/bin/psalm --show-info=false --output-format=github
                if: always() && steps.end-of-setup.outcome == 'success'

            -
                name: Run PHPStan
                run: vendor/bin/phpstan analyse
                if: always() && steps.end-of-setup.outcome == 'success'
    tests:
        runs-on: ubuntu-latest

        name: "Sylius ${{ matrix.sylius }}, PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }}, MySQL ${{ matrix.mysql }}"

        strategy:
            fail-fast: false
            matrix:
                php: [7.3, 7.4, 8.0]
                symfony: [^5.4, ^6.0]
                sylius: [~1.9.0, ~1.10.0, ~1.11.0, ~1.12.0]
                node: [18.x]
                mysql: [5.7]

                exclude:
                    -
                        sylius: ~1.9.0
                        php: 8.0
                    -
                        sylius: ~1.10.0
                        php: 7.3
                    -
                        sylius: ~1.10.0
                        symfony: ^6.0
                    -
                        sylius: ~1.11.0
                        php: 7.3
                    -
                        sylius: ~1.11.0
                        php: 7.4
                    -
                        sylius: ~1.11.0
                        symfony: ^6.0
                    -
                        sylius: ~1.12.0
                        php: 7.3
                    -
                        sylius: ~1.12.0
                        php: 7.4
                    -
                        php: 7.3
                        symfony: ^6.0
                    -
                        php: 7.4
                        symfony: ^6.0

        env:
            APP_ENV: test
            DATABASE_URL: "mysql://root:root@127.0.0.1/sylius?serverVersion=${{ matrix.mysql }}"

        steps:
            -
                uses: actions/checkout@v3

            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    extensions: intl
                    tools: flex,symfony
                    coverage: none

            -
                name: Setup Node
                uses: actions/setup-node@v3
                with:
                    node-version: "${{ matrix.node }}"

            -
                name: Shutdown default MySQL
                run: sudo service mysql stop

            -
                name: Setup MySQL
                uses: mirromutth/mysql-action@v1.1
                with:
                    mysql version: "${{ matrix.mysql }}"
                    mysql root password: "root"

            -
                name: Output PHP version for Symfony CLI
                run: php -v | head -n 1 | awk '{ print $2 }' > .php-version

            -
                name: Install certificates
                run: symfony server:ca:install

            -
                name: Run webserver
                run: (cd tests/Application && symfony server:start --port=8080 --dir=public --daemon)

            -
                name: Run Chrome Headless
                run: google-chrome-stable --enable-automation --disable-background-networking --no-default-browser-check --no-first-run --disable-popup-blocking --disable-default-apps --allow-insecure-localhost --disable-features=Translate --disable-extensions --no-sandbox --enable-features=Metal --headless --remote-debugging-port=9222 --window-size=2880,1800 https://127.0.0.1 > /dev/null 2>&1 &

            -
                name: Get Composer cache directory
                run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
                id: composer-cache

            -
                name: Cache Composer
                uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json **/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-${{ matrix.php }}-composer-

            -
                name: Configure global composer
                if: matrix.symfony != ''
                run: composer global config --no-plugins allow-plugins.symfony/flex true

            -
                name: Restrict Sylius version
                if: matrix.sylius != ''
                run: composer require "sylius/sylius:${{ matrix.sylius }}" --no-update --no-scripts --no-interaction

            -
                name: Fix build on Sylius 1.9
                if: matrix.sylius == '~1.9.0'
                run: |
                    composer require "friendsofsymfony/oauth-server-bundle:>2.0.0-alpha.0 ^2.0@dev" --no-update --no-scripts --no-interaction
                    # Sylius issues on `json_array` type not existing
                    composer require "doctrine/dbal:^2.6" --no-update --no-scripts --no-interaction

            -
                name: Install PHP dependencies
                run: composer install --no-interaction
                env:
                    SYMFONY_REQUIRE: ${{ matrix.symfony }}

            -
                name: Get Yarn cache directory
                id: yarn-cache
                run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

            -
                name: Cache Yarn
                uses: actions/cache@v3
                with:
                    path: ${{ steps.yarn-cache.outputs.dir }}
                    key: ${{ runner.os }}-node-${{ matrix.node }}-yarn-${{ hashFiles('**/package.json **/yarn.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-node-${{ matrix.node }}-yarn-

            -
                name: Install JS dependencies
                run: (cd tests/Application && yarn install)

            -
                name: Prepare test application database
                run: |
                    (cd tests/Application && bin/console doctrine:database:create -vvv)
                    (cd tests/Application && bin/console doctrine:migrations:migrate -n -vvv -q)

            -
                name: Prepare test application assets
                run: |
                    (cd tests/Application && bin/console assets:install public -vvv)
                    (cd tests/Application && yarn build)
            -
                name: Prepare test application cache
                run: (cd tests/Application && bin/console cache:warmup -vvv)

            -
                name: Load fixtures in test application
                run: (cd tests/Application && bin/console sylius:fixtures:load -n)

            -
                name: Run PHPUnit
                run: vendor/bin/phpunit --colors=always

            -
                name: Run Behat
                run: vendor/bin/behat --colors --strict -vvv --no-interaction || vendor/bin/behat --colors --strict -vvv --no-interaction --rerun

            -
                name: Upload Behat logs
                uses: actions/upload-artifact@v3
                if: failure()
                with:
                    name: Behat logs
                    path: etc/build/
                    if-no-files-found: ignore
